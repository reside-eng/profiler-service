name: Verify, Build, and Deploy App

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  GCLOUD_PROJECT: side-profiler-service

jobs:
  build-deploy:
    name: Verify, Build, and Deploy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure Package Manager
        run: |
          echo Configuring NPM_TOKEN globally for .npmrc
          npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          npm whoami

      - name: Check Environment Info
        run: |
          echo Node Version: `node --version`
          echo NPM Version: `npm --version`
          echo Yarn Version: `yarn --version`

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        env:
          CI: true
        run: yarn install --frozen-lockfile

      - name: Verify App
        run: |
          yarn lint

      # Build app bundles
      - name: Build App
        if: success()
        env:
          NODE_ENV: production
        run: |
          yarn build
      
      - name: Archive Build Artifact
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: build
          path: lib

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '275.0.0'
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}

      # Configure gcloud CLI
      - name: gcloud Set up
        run: |
          gcloud config set project $PROJECT_ID

      # Deploy image to App Engine
      - name: Deploy
        run: |
          gcloud app deploy

      - name: Archive Error Logs
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: error-logs
          path: '*.log'
